#Java
#Checkout,Codescan,QualityCheck,Build,UploadArtifacts and Deploy To Webapp
name: $(build.sourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)
trigger:
  batch: true
  branches:
    include:
    - master
pr:
  - master
variables:
  sonarServiceConnection: 'sonar_new'
  sonarProjectKey: 'jpetstore'
  sonarProjectName: 'jpetstore'
  sonarSources: '.'
  sonarJavaSource: '.'
  sonarJavaBinaries: '.'
  sonar.junit.reportsPath: 'target/surefire-reports'
  sonar.surefire.reportsPath: 'target/surefire-reports'
  sonar.jacoco.reportPath: 'target/jacoco.exec'
  sonar.binaries: 'target/classes'
  sonar.java.coveragePlugin: 'jacoco'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
stages:
- stage: JavaBuildPipeline
  displayName: Java CI CD Build Pipeline
  jobs:  
  - job: JavaBuildPipeline
    displayName: Java CI CD Build Pipeline
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
      displayName: CodeCheckout
    - task: Maven@3
      displayName: BuildWithMaven
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml' 


    - task: UniversalPackages@0
      inputs:
        command: 'publish'
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        feedsToUsePublish: 'internal'
        vstsFeedPublish: '8771f6eb-0631-4b2c-b355-e2ad3eace375/6064a316-e6f7-4965-83a4-c76d621d325f'
        vstsFeedPackagePublish: 'jpetstore.war'
        versionOption: 'patch'

    - task: SonarQubePrepare@4
      displayName: SonarqubeInitial
      inputs:
        SonarQube: $(sonarServiceConnection)
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: $(sonarProjectKey)
        cliProjectName: $(sonarProjectName)
        cliSources: $(sonarSources)
        extraProperties: |
          sonar.java.source=$(sonarJavaSource)
          sonar.java.binaries=$(sonarJavaBinaries)

    - task: SonarQubeAnalyze@4
      displayName: SonarAnalysis

    - task: SonarQubePublish@4
      inputs:
        pollingTimeoutSec: '300'
